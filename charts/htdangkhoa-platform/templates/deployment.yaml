apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "htdangkhoa-platform.fullname" . }}
  labels:
    {{- include "htdangkhoa-platform.labels" . | nindent 4 }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "htdangkhoa-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "htdangkhoa-platform.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "htdangkhoa-platform.fullname" . }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP

          {{- if .Values.service.extraPorts }}
          {{- range .Values.service.extraPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol }}
          {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configMapRef }}
            - secretRef:
                name: {{ .Values.secretRef }}

          {{- if .Values.service.startupProbe }}
          {{- if .Values.service.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: "{{ .Values.service.startupProbe.path }}"
              port: {{ .Values.service.containerPort }}
            initialDelaySeconds: {{ .Values.service.startupProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.service.startupProbe.periodSeconds | default 10 }}
          {{- end }}
          {{- end }}

          {{- if .Values.service.livenessProbe }}
          {{- if .Values.service.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: "{{ .Values.service.livenessProbe.path }}"
              port: {{ .Values.service.containerPort }}
            initialDelaySeconds: {{ .Values.service.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.service.livenessProbe.periodSeconds | default 10 }}
          {{- end }}
          {{- end }}

          {{- if .Values.service.readinessProbe }}
          {{- if .Values.service.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: "{{ .Values.service.readinessProbe.path }}"
              port: {{ .Values.service.containerPort }}
            initialDelaySeconds: {{ .Values.service.readinessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.service.readinessProbe.periodSeconds | default 10 }}
          {{- end }}
          {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        {{- if .Values.extraContainers }}
        {{ toYaml .Values.extraContainers | nindent 8 }}
        {{- end }}

      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}